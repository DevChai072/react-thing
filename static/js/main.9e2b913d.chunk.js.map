{"version":3,"sources":["logo.svg","Components/SearchBar.js","Components/ProductCategoryRow.js","Components/ProductRow.js","Components/ProductTable.js","Components/FilterableProductTable.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","withStyles","root","padding","border","textAlign","props","classes","filterText","inStockOnly","onFilterTextChange","onInStockChange","className","type","placeholder","value","onChange","e","target","id","name","checked","for","margin","borderStyle","borderColor","category","colSpan","ProductRow","product","stocked","style","color","price","dataSource","rowData","lastCategory","forEach","indexOf","push","key","width","display","gridRowGap","useState","state","setState","prevState","paddingTop","justifyItems","filterProductTable","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6JAAAA,EAAOC,QAAU,IAA0B,kC,gHCyC5BC,cAtCA,CACdC,KAAM,CACLC,QAAS,OACTC,OAAQ,iBACRC,UAAW,SAkCEJ,EA9BG,SAAAK,GAAU,IAG1BC,EAKGD,EALHC,QACAC,EAIGF,EAJHE,WACAC,EAGGH,EAHHG,YACAC,EAEGJ,EAFHI,mBACAC,EACGL,EADHK,gBAWD,OACC,yBAAKC,UAAWL,EAAQL,MACvB,8BACC,2BAAOW,KAAK,OAAOC,YAAY,YAAYC,MAAOP,EAAYQ,SAXlC,SAACC,GAC/BP,EAAmBO,EAAEC,OAAOH,UAW1B,6BACA,2BAAOF,KAAK,WAAWM,GAAG,WAAWC,KAAK,WAAWC,QAASZ,EAAaO,SATlD,SAACC,GAC5BN,EAAgBM,EAAEC,OAAOG,YASvB,2BAAOC,IAAI,YAAX,qCCTWrB,cAvBA,CACdC,KAAM,CACSqB,OAAQ,MACtBpB,QAAS,MACKC,OAAQ,MACRoB,YAAa,QACbC,YAAa,cAiBdxB,EAbY,SAAAK,GAEWA,EAAtBC,QAFqB,IAEXmB,EAAYpB,EAAZoB,SAElB,OACQ,4BACQ,wBAAIC,QAAQ,KACHD,OCLlBE,EAbI,SAAAtB,GAAU,IAEbuB,EAAYvB,EAAZuB,QACFT,EAAQS,EAAQC,QAAWD,EAAQT,KAAQ,0BAAMW,MAAO,CAACC,MAAO,QAArB,IAA+BH,EAAQT,MAExF,OACQ,4BACQ,4BAAKA,GACL,4BAAKS,EAAQI,SC4DtBhC,cAjEA,CACPC,KAAM,CACEC,QAAS,OACTC,OAAQ,kBACRC,UAAW,SA6DZJ,EAzDM,SAAAK,GAAU,IAGfC,EAIJD,EAJIC,QACA2B,EAGJ5B,EAHI4B,WACA1B,EAEJF,EAFIE,WACAC,EACJH,EADIG,YAGF0B,EAAU,GACZC,EAAe,KAgCnB,OA9BAF,EAAWG,SAAQ,SAAAR,IAE+B,IAAtCA,EAAQT,KAAKkB,QAAQ9B,KAIrBC,IAAgBoB,EAAQC,UAIxBD,EAAQH,WAAaU,GACjBD,EAAQI,KACA,kBAAC,EAAD,CACQC,IAAKX,EAAQH,SACbA,SAAUG,EAAQH,YAK1CS,EAAQI,KACA,kBAAC,EAAD,CACQC,IAAKX,EAAQT,KACbS,QAASA,KAIzBO,EAAeP,EAAQH,cAKvB,yBAAKd,UAAWL,EAAQL,MAChB,+BACQ,+BACQ,4BACQ,oCACA,uCAGhB,+BAAQiC,QCCzBlC,cA5DA,CACdC,KAAM,CACLuC,MAAO,MACPtC,QAAS,OACTC,OAAQ,mBACRsC,QAAS,OACTC,WAAY,QAsDC1C,EAlDgB,SAAAK,GAAU,IAEhCC,EAAYD,EAAZC,QAF+B,EAIbqC,mBAAS,CAClCpC,WAAY,GACZC,aAAa,IANyB,mBAIhCoC,EAJgC,KAIzBC,EAJyB,KAiCxC,OACC,yBAAKlC,UAAWL,EAAQL,MACvB,kBAAC,EAAD,CACCM,WAAYqC,EAAMrC,WAClBC,YAAaoC,EAAMpC,YACnBC,mBA7B6B,SAACF,GAC/BsC,GAAS,SAAAC,GAAS,sBACdA,EADc,CAEjBvC,WAAYA,QA2BHG,gBAvBiB,SAACF,GAC5BqC,GAAS,SAAAC,GAAS,sBACdA,EADc,CAEjBtC,YAAaA,UAsBd,kBAAC,EAAD,CACCyB,WAlBc,CAChB,CAAER,SAAU,iBAAkBO,MAAO,SAAUH,SAAS,EAAMV,KAAM,YACpE,CAAEM,SAAU,iBAAkBO,MAAO,QAASH,SAAS,EAAMV,KAAM,YACnE,CAAEM,SAAU,iBAAkBO,MAAO,SAAUH,SAAS,EAAOV,KAAM,cACrE,CAAEM,SAAU,cAAeO,MAAO,SAAUH,SAAS,EAAMV,KAAM,cACjE,CAAEM,SAAU,cAAeO,MAAO,UAAWH,SAAS,EAAOV,KAAM,YACnE,CAAEM,SAAU,cAAeO,MAAO,UAAWH,SAAS,EAAMV,KAAM,YAahEZ,WAAYqC,EAAMrC,WAClBC,YAAaoC,EAAMpC,kBC/BPR,cAvBA,CACdC,KAAM,CACLwC,QAAS,OACTD,MAAO,OACPO,WAAY,OACZ3C,UAAW,SACX4C,aAAc,WAiBDhD,EAbH,SAACK,GAAW,IAEfC,EAAYD,EAAZC,QAER,OACC,yBAAKK,UAAWL,EAAQL,MAEvB,kBAAC,EAAD,CAAyBU,UAAWL,EAAQ2C,yBCV3BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9e2b913d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Fragment } from 'react'\r\nimport { withStyles } from '@material-ui/core'\r\n\r\nconst styles = {\r\n\troot: {\r\n\t\tpadding: '10px',\r\n\t\tborder: '1px solid blue',\r\n\t\ttextAlign: 'left',\r\n\t}\r\n}\r\n\r\nconst SearchBar = props => {\r\n\r\n\tconst {\r\n\t\tclasses,\r\n\t\tfilterText,\r\n\t\tinStockOnly,\r\n\t\tonFilterTextChange,\r\n\t\tonInStockChange\r\n\t} = props\r\n\r\n\tconst handleFilterTextChange = (e) => {\r\n\t\tonFilterTextChange(e.target.value)\r\n\t}\r\n\r\n\tconst handleInStockChange = (e) => {\r\n\t\tonInStockChange(e.target.checked)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<form>\r\n\t\t\t\t<input type=\"text\" placeholder=\"Search...\" value={filterText} onChange={handleFilterTextChange} />\r\n\t\t\t\t<br></br>\r\n\t\t\t\t<input type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" checked={inStockOnly} onChange={handleInStockChange} />\r\n\t\t\t\t<label for=\"vehicle1\"> Only show products in stock</label>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default withStyles(styles)(SearchBar)\r\n","import React from 'react'\r\nimport { withStyles } from '@material-ui/core'\r\n\r\nconst styles = {\r\n\troot: {\r\n                margin: '5px',\r\n\t\tpadding: '5px',\r\n                border: '1px',\r\n                borderStyle: 'solid',\r\n                borderColor: 'turquoise',\r\n\t}\r\n}\r\n\r\nconst ProductCategoryRow = props => {\r\n\r\n        const { classes,  category} = props\r\n        \r\n        return (\r\n                <tr>\r\n                        <th colSpan=\"2\">\r\n                                {category}\r\n                        </th>\r\n                </tr>\r\n        )\r\n}\r\n\r\nexport default withStyles(styles)(ProductCategoryRow)\r\n","import React from 'react'\r\n\r\nconst ProductRow = props => {\r\n\r\n        const { product } = props\r\n        const name = (product.stocked) ? product.name :  <span style={{color: 'red'}}> {product.name}</span>\r\n\r\n        return (\r\n                <tr>\r\n                        <td>{name}</td>\r\n                        <td>{product.price}</td>\r\n                </tr>\r\n        )\r\n}\r\n\r\nexport default ProductRow\r\n","import React from 'react'\r\nimport { withStyles, } from '@material-ui/core'\r\nimport ProductCategoryRow from './ProductCategoryRow'\r\nimport ProductRow from './ProductRow'\r\n\r\nconst styles = {\r\n        root: {\r\n                padding: '10px',\r\n                border: '1px solid green',\r\n                textAlign: 'left',\r\n        }\r\n}\r\n\r\nconst ProductTable = props => {\r\n\r\n        const {\r\n                classes,\r\n                dataSource,\r\n                filterText,\r\n                inStockOnly\r\n        } = props\r\n\r\n        const rowData = []\r\n        let lastCategory = null\r\n\r\n        dataSource.forEach(product => {\r\n\r\n                if (product.name.indexOf(filterText) === -1) {\r\n                        return;\r\n                }\r\n\r\n                if (inStockOnly && !product.stocked) {\r\n                        return;\r\n                }\r\n\r\n                if (product.category !== lastCategory) {\r\n                        rowData.push(\r\n                                <ProductCategoryRow\r\n                                        key={product.category}\r\n                                        category={product.category}\r\n                                />\r\n                        )\r\n                }\r\n                \r\n                rowData.push(\r\n                        <ProductRow\r\n                                key={product.name}\r\n                                product={product}\r\n                        />\r\n                )\r\n\r\n                lastCategory = product.category\r\n\r\n        });\r\n\r\n        return (\r\n                <div className={classes.root}>\r\n                        <table>\r\n                                <thead>\r\n                                        <tr>\r\n                                                <th>Name</th>\r\n                                                <th>Price</th>\r\n                                        </tr>\r\n                                </thead>\r\n                                <tbody>{rowData}</tbody>\r\n                        </table>\r\n                </div>\r\n        )\r\n}\r\n\r\nexport default withStyles(styles)(ProductTable)\r\n","import React, { useState } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport SearchBar from './SearchBar'\r\nimport ProductTable from './ProductTable'\r\n\r\nconst styles = {\r\n\troot: {\r\n\t\twidth: '25%',\r\n\t\tpadding: '10px',\r\n\t\tborder: '1px solid orange',\r\n\t\tdisplay: 'grid',\r\n\t\tgridRowGap: '5px',\r\n\t}\r\n}\r\n\r\nconst FilterableProductTable = props => {\r\n\r\n\tconst { classes } = props\r\n\r\n\tconst [state, setState] = useState({\r\n\t\tfilterText: '',\r\n\t\tinStockOnly: false\r\n\t})\r\n\r\n\tconst handleFilterTextChange = (filterText) => {\r\n\t\tsetState(prevState => ({\r\n\t\t\t...prevState,\r\n\t\t\tfilterText: filterText\r\n\t\t}));\r\n\t}\r\n\r\n\tconst handleInStockChange = (inStockOnly) => {\r\n\t\tsetState(prevState => ({\r\n\t\t\t...prevState,\r\n\t\t\tinStockOnly: inStockOnly\r\n\t\t}));\r\n\t}\r\n\r\n\r\nconst PRODUCTS = [\r\n\t{ category: 'Sporting Goods', price: '$49.99', stocked: true, name: 'Football' },\r\n\t{ category: 'Sporting Goods', price: '$9.99', stocked: true, name: 'Baseball' },\r\n\t{ category: 'Sporting Goods', price: '$29.99', stocked: false, name: 'Basketball' },\r\n\t{ category: 'Electronics', price: '$99.99', stocked: true, name: 'iPod Touch' },\r\n\t{ category: 'Electronics', price: '$399.99', stocked: false, name: 'iPhone 5' },\r\n\t{ category: 'Electronics', price: '$199.99', stocked: true, name: 'Nexus 7' }\r\n];\r\n\r\nreturn (\r\n\t<div className={classes.root}>\r\n\t\t<SearchBar\r\n\t\t\tfilterText={state.filterText}\r\n\t\t\tinStockOnly={state.inStockOnly}\r\n\t\t\tonFilterTextChange={handleFilterTextChange}\r\n          \t\tonInStockChange={handleInStockChange}\r\n\t\t/>\r\n\t\t<ProductTable \r\n\t\t\tdataSource={PRODUCTS}\r\n\t\t\tfilterText={state.filterText}\r\n\t\t\tinStockOnly={state.inStockOnly}\r\n\t\t/>\r\n\t</div>\r\n)\r\n}\r\n\r\nexport default withStyles(styles)(FilterableProductTable)\r\n","import React, { Fragment } from 'react';\nimport logo from './logo.svg';\nimport { withStyles } from '@material-ui/core/styles';\nimport FilterableProductTable from './Components/FilterableProductTable'\n\nconst styles = {\n\troot: {\n\t\tdisplay: 'grid',\n\t\twidth: '100%',\n\t\tpaddingTop: '20px',\n\t\ttextAlign: 'center',\n\t\tjustifyItems: 'center',\n\t}\n}\n\nconst App = (props) => {\n\n\tconst { classes } = props\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t\n\t\t\t<FilterableProductTable  className={classes.filterProductTable} />\n\n\t\t</div>\n\t)\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}